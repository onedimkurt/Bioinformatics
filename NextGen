def readfastq(filename):
    sequences=[]
    qualities=[]
    with open(filename) as fh:
        while True:
            fh.readline()
            seq=fh.readline().rstrip()
            fh.readline()
            qual=fh.readline().rstrip()
            if len(seq)==0:
                break
            sequences.append(seq)
            qualities.append(qual)
    return sequences,qualities
seqs,quals=readfastq("SRR835775_1.first1000.fastq")

#To convert the ASCII symbol to the quality score:
def phred33toQ(qual):
    return ord(qual)-33
def createhist(qualities):
    hist=[0]*50
    for qual in qualities:
        for phred in qual:
            q=phred33toQ(phred)
            hist[q]+=1
    return hist
h=createhist(quals)
print(h)

import matplotlib.pyplot as plt
plt.bar(range(len(h)),h)
print(plt.show())
-->
-->
#Finding GC by position:
matplot again is worked
def findGCbypos(reads):
    gc=[0]*100
    totals=[0]*100
    for read in reads:
        for i in range(len(read)):
            if read[i]=="C" or read[i]=="G":
                gc[i]+=1
            totals[i]+=1
    for i in range(len(gc)):
            if totals[i]>0:
                gc[i]/=float(totals[i])
    return  gc
gc=findGCbypos(seqs)
print(gc)
import matplotlib.pyplot as plt
plt.plot(range(len(gc)),gc)
print(plt.show())

-->
#if you want to count your bases and their numbers:
import collections
count=collections.Counter()
for i in seqs:
    count.update(i)
print(count)

